buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath "io.github.kdabir.directree:directree:+"
        classpath 'net.researchgate:gradle-release:2.6.0'
    }
}

apply plugin: 'net.researchgate.release'

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'maven'

    sourceCompatibility = 1.8 // java 8
    targetCompatibility = 1.8

    repositories {
        jcenter()
    }

    dependencies {
        compile 'org.codehaus.groovy:groovy-all:2.4.12'
        testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    }

    sourceSets {
        main.groovy.srcDirs = ['src']
        test.groovy.srcDirs = ['test']

        main.resources.srcDirs = ['resources']
        test.resources.srcDirs = ['testResources']

        test.java.srcDirs = main.java.srcDirs = []
    }

    test {
        testLogging {
            events 'failed'
            exceptionFormat 'short'
        }
    }

}

release {
    tagTemplate = '$version'
}

class CreateModule extends DefaultTask {
    // Use --name filename.
    @org.gradle.api.internal.tasks.options.Option(
        option = "name",
        description = "module name",
        order = 1)
    String moduleName

    CreateModule() {
        moduleName = 'newmodule' // default name
        description = 'generates a new module, overwrites if already exists'
    }

    @OutputDirectory
    File getOutputFile() {
        return new File(project.rootDir, moduleName)
    }

    @TaskAction
    void create() {
        directree.DirTree.create(outputFile.absolutePath) {
            file("build.gradle", "//.keep")
            file("gradle.properties", "version=0.0.1-SNAPSHOT")
            dir("src")
            dir("test")
        }
        this.project.file("settings.gradle").append("\ninclude '${moduleName}'")
    }
}

task createModule(type: CreateModule)
task build
